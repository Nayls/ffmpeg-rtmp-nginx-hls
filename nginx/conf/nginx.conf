worker_processes auto;
events {
    worker_connections 1024;
}

error_log /dev/stdout info;
pid /var/run/nginx.pid;

# RTMP configuration
rtmp {
    server {
        listen 1935; # Listen on standard RTMP port
        chunk_size 4000;

        application show {
            live on;
            # Turn on HLS
            hls on;
            hls_path /mnt/hls/;
            hls_fragment 3;
            hls_playlist_length 60;
            # disable consuming the stream from nginx as rtmp
            deny play all;
        }
    }
}

http {
    sendfile off;
    tcp_nopush on;
    directio 512;
    include /usr/local/nginx/conf/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /dev/stdout main;

    server {
        listen 8080;
        server_name localhost;

        absolute_redirect off;

        location /hls {
            # Disable cache
            add_header 'Cache-Control' 'no-cache';

            # CORS setup
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length';

            # allow CORS preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            types {
                application/dash+xml mpd;
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }

            root /mnt/;
        }

        location /js/ {
            root /usr/local/nginx/html/;

            try_files $uri $uri/ =404;
            add_header Cache-Control "no-store, no-cache, must-revalidate";
        }

        location /css/ {
            root /usr/local/nginx/html/;

            try_files $uri $uri/ =404;
            add_header Cache-Control "no-store, no-cache, must-revalidate";
        }

        location /img/ {
            root /usr/local/nginx/html/;

            try_files $uri $uri/ =404;
            add_header Cache-Control "no-store, no-cache, must-revalidate";
        }

        location /live {
            root /usr/local/nginx/html;
            index live.html live.htm;

            try_files $uri.html $uri/ =404;
            add_header Cache-Control "no-store, no-cache, must-revalidate";
        }

        location /obs {
            root /usr/local/nginx/html;
            index obs.html obs.htm;

            try_files $uri.html $uri/ =404;
            add_header Cache-Control "no-store, no-cache, must-revalidate";
        }

        location / {
            return 301 /live;
        }
    }
}
